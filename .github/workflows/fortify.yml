 ################################################################################################################################################
# Template de Github Actions - Stack Completa de AppSec
# Elaboração:
# Emerson Xavier - emerson.xavier@keeggo.com
# Michel Santana - michel.santana@keeggo.com
#
# Stack de Ferramentas de App Sec:
# - Checkout do Código
# - Build da Aplicação Java
# - SonarQube - Análise de Qualidade do Código
# - OWASP Dependency Track - Análise de Componentes de Terceiros
# - OpenText Debricked - Análise de Componentes de Terceiros
# - OpenText Fortify Static Code Analyzer - Análise Estática
# - Mobb Fixer - Correção Automatizada de Código
#
#
################################################################################################################################################

name: Debricked + Fortify + Mobb

# Gatilho de Disparo
on: [push]
# Steps
jobs:
  AppSec-Stack:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    env:
      App-Version: 'javaWebApp:Sample'

    steps:
      # Check out source code
      - name: Check Out Source Code
        uses: actions/checkout@v4
        
      # Java
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

        # Fortify Setup
      - name: Install Debricked and FCLI
        uses: fortify/github-action/setup@v1
        with:
          tool-definitions: https://github.com/fortify/tool-definitions/releases/download/v1/tool-definitions.yaml.zip
          export-path: true
          fcli: latest
          sc-client: 23.2
          fod-uploader: skip
          vuln-exporter: skip
          bugtracker-utility: skip
          debricked-cli: latest

      - name: Utilitários Instalados
        run: |
          java -version
          fcli -V
          debricked -v
     # Loga no SSC/SC-SAST
      - name: Login Fortify SSC/SC-SAST Controller  
        run: |
          fcli ssc session login --url=${{ secrets.SSC_URL }} --ci-token=${{ secrets.SSC_TOKEN }}
          fcli sc-sast session login --client-auth-token=${{ secrets.CLIENT_AUTH_TOKEN }} --ssc-url=${{ secrets.SSC_URL }} --ssc-ci-token=${{ secrets.SSC_TOKEN }}
      
      # Loga no SSC/SC-SAST
      - name: Preparação do Pacote Fortify  
        run: scancentral package --build-tool none -o $GITHUB_REF_NAME.zip
        
      - name: Envio Fortify  
        run: fcli sc-sast scan start --package-file=$GITHUB_REF_NAME.zip --sensor-version=24.2 --publish-to ${{ env.App-Version  }} --ssc-ci-token=${{ secrets.SSC_TOKEN }} --store job:jobToken
      
      # Debricked
      #- name: Debricked Scan
      #  run: debricked scan -t ${{ secrets.DEBRICKED_TOKEN }} -r=${{ env.App-Version  }} --commit=${{ env.GITHUB_RUN_ID }}
        
      #- name: Importa os Resultados Debricked no SSC  
      #  run: fcli ssc artifact import-debricked -t ${{ secrets.DEBRICKED_TOKEN }} --av=${{ env.App-Version  }} -r=${{ env.App-Version  }} --branch=$GITHUB_REF_NAME
      
      # Espera Scan
      - name: Espera Scan Fortify Acabar  
        run: fcli sc-sast scan wait-for --any-ssc-state PROCESS_COMPLETE --timeout 2h ::job::jobToken
      
      - name: Consulta ID do Ultimo Artefato
        run: fcli ssc artifact list --appversion ${{ env.App-Version  }} --query "['scanTypes'].contains('SCA')" --output 'expr={id}\n' > out.txt
        
      - name: Recuperação do Ultimo Artefacto Scaneado
        run: |
         $var = $(head -n 1 out.txt)
         fcli ssc artifact download $var -f='app.fpr'
         
      # Mobb Upload FPR
      - name: Upload FPR => Mobb
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: fpr
          path: app.fpr
          
     # Mobb Fixer
      - name: Executa Mobb Fixer
        if: always()
        uses: mobb-dev/action@v1
        with:
          report-file: "app.fpr"
          api-key: ${{ secrets.MOBB_API_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # scanner: fortify
